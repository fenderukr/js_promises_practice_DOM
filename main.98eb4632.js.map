{"version":3,"sources":["scripts/main.js"],"names":["firstPromise","Promise","resolve","reject","document","addEventListener","setTimeout","Error","promiseHandler","className","message","div","createElement","classList","add","setAttribute","innerText","body","append","then","catch","secondPromise","forEach","eventType","thirdPromise","isLeftClicked","isRightClicked","error"],"mappings":";AAAA,aAEA,IAAMA,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCC,SAASC,iBAAiB,QAAS,WACjCH,EAAQ,gCAGVI,WAAW,WACTH,EAAO,IAAII,MAAM,gCAChB,OAGCC,EAAiB,SAACC,EAAWC,GAC3BC,IAAAA,EAAMP,SAASQ,cAAc,OAEnCD,EAAIE,UAAUC,IAAIL,GAClBE,EAAII,aAAa,UAAW,gBAC5BJ,EAAIK,UAAYN,EAChBN,SAASa,KAAKC,OAAOP,IAGvBX,EACGmB,KAAK,SAACT,GACLF,EAAe,UAAWE,KAE3BU,MAAM,SAAiB,GAAdV,IAAAA,EAAAA,EAAAA,QACRF,EAAe,UAAWE,KAG9B,IAAMW,EAAgB,IAAIpB,QAAQ,SAACC,EAASC,GACzC,CAAA,QAAS,eAAemB,QAAQ,SAAAC,GAC/BnB,SAASC,iBAAiBkB,EAAW,WACnCrB,OAAAA,EAAQ,qCAIdmB,EACGF,KAAK,SAACT,GACLF,EAAe,UAAWE,KAE3BU,MAAM,SAAiB,GAAdV,IAAAA,EAAAA,EAAAA,QACRF,EAAe,UAAWE,KAG9B,IAAMc,EAAe,IAAIvB,QAAQ,SAACC,EAASC,GACrCsB,IAAAA,GAAgB,EAChBC,GAAiB,EAErBtB,SAASC,iBAAiB,QAAS,WACjCoB,GAAgB,EAEZC,GACFxB,EAAQ,gCAIZE,SAASC,iBAAiB,cAAe,WACvCqB,GAAiB,EAEbD,GACFvB,EAAQ,kCAKdsB,EACGL,KAAK,SAACT,GACLF,EAAe,UAAWE,KAE3BU,MAAM,SAACO,GACNnB,EAAe,UAAWmB,EAAMjB","file":"main.98eb4632.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', function() {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst promiseHandler = (className, message) => {\n  const div = document.createElement('div');\n\n  div.classList.add(className);\n  div.setAttribute('data-qa', 'notification');\n  div.innerText = message;\n  document.body.append(div);\n};\n\nfirstPromise\n  .then((message) => {\n    promiseHandler('success', message);\n  })\n  .catch(({ message }) => {\n    promiseHandler('warning', message);\n  });\n\nconst secondPromise = new Promise((resolve, reject) => {\n  ['click', 'contextmenu'].forEach(eventType => {\n    document.addEventListener(eventType, () =>\n      resolve('Second promise was resolved'));\n  });\n});\n\nsecondPromise\n  .then((message) => {\n    promiseHandler('success', message);\n  })\n  .catch(({ message }) => {\n    promiseHandler('warning', message);\n  });\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  let isLeftClicked = false;\n  let isRightClicked = false;\n\n  document.addEventListener('click', () => {\n    isLeftClicked = true;\n\n    if (isRightClicked) {\n      resolve('Third promise was resolved');\n    }\n  });\n\n  document.addEventListener('contextmenu', () => {\n    isRightClicked = true;\n\n    if (isLeftClicked) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nthirdPromise\n  .then((message) => {\n    promiseHandler('success', message);\n  })\n  .catch((error) => {\n    promiseHandler('warning', error.message);\n  });\n"]}